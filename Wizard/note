酷炫的法师训练

POJ2443
bitset的使用

POJ3244
max(Ia-Ib,Ja-Jb,Ka-Kb) - min(Ia-Ib,Ja-Jb,Ka-Kb)
max(a1, a2, a3) - min(a1, a2, a3)
可以转化为
(|a1 - a2| + |a2 - a3| + |a3 - a1|) / 2
|Ia-Ib-Ja+Jb| -> |Ia-Ja-(Ib-Jb)|

POJ3685
可以发现二分答案后，因为每一行都存在单调性，所以可以加速成nlogn

POJ3465
尝试贪心，发现只要实时反悔的做即可

POJ3213
这题还是说下题意，给你两个矩阵，和他的乘法结果，最多有一个错误
这题确实容易定势，但是可以发现一个错误会造成某一行的和是错误的，而行和是可以快速求出来的

POJ2595
数形结合
SIGMA(ui) = 1, 0 <= ui <= 1, 那么SIGMA(ui * xi)相当于质点重心在x轴上的坐标
在平面的质点的重心在这些质心的凸包内，解决了

POJ3040
贪心...

POJ3182 / CF375DIV1C
这题也说下题意，在n*m矩阵里给联通块，问包含这个联通块的步数
由点在多边形内产生思路，然后我们BFS的时候就维护射线

POJ3375
DP状态精简

POJ3467
暴力...

POJ3419
暴力...

HDU3552
二分...
这题数据过水..代码的CMP里有错

HDU4014
对一次询问，对度数小的点去暴力寻找答案，然后用map记录
可以用均摊证明复杂度是OK的

HDU3545
若不存在限制，该题的DP也并不显然
dp[color][a][b][c][d]
表示当前涂完了color颜色，四行分别涂到a，b，c，d（注意状态表示，a，b，c，d并不一定涂了color）
那么转移就是SIGMA(dp[color-1][a'][b'][c'][d'])
我们想办法加速，这题可以类似完全背包一样的做DP，dp[a][b][c][d]->dp[a+1][b][c][d] （当然也可以用前缀和）
这题的限制其实就是某一些状态不存在，这个可以预处理出vis[a][b][c][d]，然后O(1)判断




